%!PS-Adobe-3.0
%%Creator: groff version 1.22.3
%%CreationDate: Mon Feb 10 23:03:23 2020
%%Title: cse112-2020q1-midterm.ps
%%BoundingBox: 0 0 612 792
%%Orientation: Portrait
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Times-Bold
%%+ font Times-Roman
%%+ font Times-BoldItalic
%%+ font Helvetica-Bold
%%+ font ZapfDingbats
%%+ font Times-Italic
%%+ font Symbol
%%DocumentSuppliedResources: procset grops 1.22 3
%%+ font Courier-Narrow-Bold
%%+ font Courier-Narrow
%%Pages: 4
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 3
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-BoldItalic
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font ZapfDingbats
%%IncludeResource: font Times-Italic
%%IncludeResource: font Symbol
%%BeginResource: font Courier-Narrow-Bold
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Courier-Bold
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Narrow-Bold
[ .75 0 0 1 0 0 ]
/Courier-Bold
MakeTransformedFont
%%EndResource
%%BeginResource: font Courier-Narrow
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Courier
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Narrow
[ .75 0 0 1 0 0 ]
/Courier
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Helvetica-Bold@0 ENC0
/Helvetica-Bold RE/Times-BoldItalic@0 ENC0/Times-BoldItalic RE
/Courier-Narrow-Bold@0 ENC0/Courier-Narrow-Bold RE/Courier-Narrow@0 ENC0
/Courier-Narrow RE/Times-Roman@0 ENC0/Times-Roman RE/Times-Bold@0 ENC0
/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CSE-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2020 \203 Midterm Exam)-.18 E/F1 10/Times-Roman@0 SF 2.5(1o)
154.27 G 2.5(f4)-2.5 G/F2 9/Courier-Narrow@0 SF
($Id: cse112-2020q1-midterm.mm,v 1.163 2020-02-10 15:03:22-08 - - $)72
63 Q 43.2 43.2 93.6 104.2 DE ST F1(page 1)80.41 78.8 Q 43.2 43.2 136.8
104.2 DE ST(page 2)123.61 78.8 Q 43.2 43.2 180 104.2 DE ST(page 3)166.81
78.8 Q 43.2 43.2 223.2 104.2 DE ST(page 4)210.01 78.8 Q 540 82.6 MT 0
-21.6 RL -180 0 RL 0 21.6 RL CL ST F0(Last Name)365 78.8 Q(:)1.666 E 540
104.2 MT 0 -21.6 RL -180 0 RL 0 21.6 RL CL ST(First Name)365 100.4 Q(:)
1.666 E 540 125.8 MT 0 -21.6 RL -180 0 RL 0 21.6 RL CL ST -.834
(CruzID :)365 122 R/F3 10/Courier-Narrow-Bold@0 SF(@ucsc.edu)495 122 Q
66.24 43.2 302.4 104.2 DE 2 LW ST F1 -.8(To)284.189 78.8 S -.834
(tal / 42).8 F/F4 10/Times-BoldItalic@0 SF .161(No books)72 137.8 R
5.161(;N)1.666 G 2.661(oc)-5.161 G -.834(alculator ;)-2.661 F .16
(No computer)5.161 F 5.16(;N)1.666 G 2.66(oe)-5.16 G -.834(mail ;)-2.66
F .16(No internet)5.16 F 5.16(;N)1.666 G 2.66(on)-5.16 G -.834(otes ;)
-2.66 F .16(No phone.)5.16 F -.55(Po)5.16 G .16(ints will be deduct-).55
F .596(ed f)72 149.8 R .596(or messy or unreadable answ)-.1 F 3.096
(ers. Do)-.1 F .597(your scratc)3.097 F 3.097(hw)-.1 G .597
(ork elsewhere and enter only your \214nal answ)-3.247 F .597
(er into the)-.1 F(spaces pro)72 161.8 Q(vided.)-.15 E(OCaml.)72 179.8 Q
F1 -.15(Fo)5.654 G 3.154(ra).15 G .653
(ll questions asking for code in OCaml, you need not e)-3.154 F .653
(xplicitly specify the type of a function')-.15 F 3.153(sa)-.55 G -.18
(rg)-3.153 G(u-).18 E(ment or the type of its result.)72 191.8 Q(Ob)5 E
(viously)-.15 E 2.5(,O)-.65 G(Caml uses type inference.)-2.5 E 2.5
(1. De\214ne)79.5 209.8 R .493(the function)2.993 F F3(sum)2.993 E F1
.494(which will \214nd the sum of all numbers in a list.)2.993 F .494
(Use as little function call stack space)5.494 F(as possible.)92 221.8 Q
(Do not use a higher order function.)5 E(\(a\))100.9 239.8 Q F4(Sc)5 E
(heme.)-.1 E/F5 10/Helvetica-Bold@0 SF([2)5 E/F6 10/ZapfDingbats SF(4)A
F5(])A F1(\(b\))100.34 320.2 Q F4(OCaml.)5 E F5([2)5 E F6(4)A F5(])A/F7
10/Courier-Narrow@0 SF(#)117 332.2 Q F3(sum;;)4.5 E F7 4.5(-:i)117 344.2
S(nt list -> int = <fun>)-4.5 E F1 2.5(2. De\214ne)79.5 424.6 R
(the fold left function.)2.5 E
(Use as little function call stack space as possible.)5 E(\(a\))100.9
442.6 Q F4(Sc)5 E(heme.)-.1 E F1(The order of ar)5 E
(guments are the same as in OCaml.)-.18 E F5([2)5 E F6(4)A F5(])A F7(>)
117 454.6 Q F3(foldl)4.5 E F7(#<procedure:foldl>)117 466.6 Q F1(\(b\))
100.34 547 Q F4(OCaml.)5 E F5([2)5 E F6(4)A F5(])A F7(#)117 559 Q F3
(List.fold_left;;)4.5 E F7 4.5(-:\()117 571 S
('a -> 'b -> 'a\) -> 'a -> 'b list -> 'a = <fun>)-4.5 E F1 2.5
(3. De\214ne)79.5 651.4 R(the function)2.5 E F3(sum)2.5 E F1
(using the fold left higher order function.)2.5 E(\(a\))100.9 669.4 Q F4
(Sc)5 E(heme.)-.1 E F1(Use)5 E F3(foldl)2.5 E F1(.)A F5([1)5 E F6(4)A F5
(])A F1(\(b\))100.34 713.8 Q F4(OCaml.)5 E F1(Use)5 E F3(List.fold_left)
2.5 E F1(.)A F5([1)5 E F6(4)A F5(])A 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CSE-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2020 \203 Midterm Exam)-.18 E/F1 10/Times-Roman@0 SF 2.5(2o)
154.27 G 2.5(f4)-2.5 G(4.)79.5 70 Q/F2 10/Times-BoldItalic@0 SF(Sc)5 E
(heme.)-.1 E F1 .497(De\214ne the function)5.497 F/F3 10
/Courier-Narrow-Bold@0 SF(evalexpr)2.997 E F1 .497(which tak)2.997 F
.497(es as an ar)-.1 F .496(gument either a number or an e)-.18 F 2.996
(xpression. A)-.15 F(num-)2.996 E .001(ber is al)92 82 R -.1(wa)-.1 G
.001(ys returned as real.).1 F .002(An e)5.001 F .002
(xpression is a list of length 3, where the)-.15 F F3(car)2.502 E F1
.002(is a binary function, and the)2.502 F F3(cdr)2.502 E F1 .807
(is a list of tw)92 94 R 3.306(oe)-.1 G 3.306(xpressions. See)-3.456 F
.806(the Scheme interaction at the left.)3.306 F .806
(Note that there is no hash table for func-)5.806 F 2.5(tions. The)92
106 R(actual function')2.5 E 2.5(sv)-.55 G
(alue is in the list in the function position.)-2.75 E
(Note the quasiquote and unquote.)5 E/F4 10/Helvetica-Bold@0 SF([2)5 E
/F5 10/ZapfDingbats SF(4)A F4(])A 295.5 116.5 92 116.5 DL F3 4.5(>\()97
125 S(evalexpr `\(,+ \(,* 2 3\) \(,* 4 5\)\)\))-4.5 E(26.0)97 136 Q 4.5
(>\()97 147 S(evalexpr 3\))-4.5 E(3.0)97 158 Q 4.5(>\()97 169 S
(evalexpr `\(,* \(,+ 8 3\) \(,+ \(,* 2 9\) 6\)\)\))-4.5 E(264.0)97 180 Q
295.5 184.5 92 184.5 DL 295.5 116.5 295.5 184.5 DL 92 116.5 92 184.5 DL
F1(5.)79.5 200 Q F2(Smalltalk.)5 E F1 .135(Extend class)5.135 F F3
(Array)2.635 E F1 .135(with a method)2.635 F F3(find)2.635 E F1 2.635
(,w)C .135(hich has a single ar)-2.635 F 2.636(gument. It)-.18 F .136
(returns the position \(inde)2.636 F(x\))-.15 E
(of the \214rst occurrence of that ar)92 212 Q(gument in the array)-.18
E 5(.I)-.65 G 2.5(tr)-5 G(eturns)-2.5 E F3(nil)2.5 E F1(if not found.)
2.5 E F4([2)5 E F5(4)A F4(])A F3(st> a := #\( 3 1 4 1 5 9 2 6\).)92 229
Q(Array extend [)15 E(\(3 1 4 1 5 9 2 6 \))92 240 Q(find: value [)78 E
(st> a find: 9.)92 251 Q(6)92 262 Q(st> a find: 10.)92 273 Q(nil)92 284
Q 230 220.5 230 286.5 DL F1(6.)79.5 302 Q F2(Smalltalk.)5 E F1 .005
(De\214ne a block closure)5.005 F F3(gcd)2.505 E F1 .005(with tw)2.505 F
2.505(oa)-.1 G -.18(rg)-2.505 G .005(uments that uses Euclid').18 F
2.505(sa)-.55 G .004(lgorithm to \214nd the greatest com-)-2.505 F .019
(mon di)92 314 R .019(visor of tw)-.25 F 2.519(oi)-.1 G(nte)-2.519 E
2.519(gers.. It)-.15 F .019(might be called with the e)2.519 F
(xpression)-.15 E F3 .02(\(gcd value: 20 value: 5\))2.52 F F1 5.02(.T)C
.02(he equi)-5.02 F -.25(va)-.25 G(lent).25 E(function in C is sho)92
326 Q(wn here.)-.25 E -1.1(Yo)5 G(ur algorithm may assume that both)1.1
E/F6 10/Times-Italic@0 SF(x)3.27 E F1 2.8(>0)3.33 G(and)-.3 E F6(y)3.24
E F1 2.8(>0)3.12 G(.)-2.8 E F4([2)5 E F5(4)A F4(])A F3
(int gcd \(int x, int y\) {)92 343 Q(gcd := [:x :y |)28.5 E
(while \(x != y\) {)105.5 354 Q(if \(x > y\) x = x - y;)119 365 Q
(else y = y - x;)146 376 Q(})105.5 387 Q(return x;)105.5 398 Q(})92 409
Q 221 334.5 221 411.5 DL F1(7.)79.5 427 Q F2(Smalltalk.)5 E F1 .795
(Extend class)5.795 F F3(Array)3.295 E F1 .795(with a method)3.295 F F3
(fold:unit:)3.295 E F1 3.295(,w)C .795(hich tak)-3.295 F .795(es as ar)
-.1 F .794(guments a block which combines)-.18 F(tw)92 439 Q 2.543(oe)
-.1 G .044(lements into a single element, and a unit which is the ident\
ity operation for the the block.)-2.543 F .044(The result is the)5.044 F
.167(array folded into a single element using the unit as a starter ele\
ment.)92 451 R -.834(Hint :)5.167 F .166
(Think about fold left in a function-)5.167 F(al language.)92 463 Q F4
([2)5 E F5(4)A F4(])A F3(st> a := #\(1 2 3 4 5\).)92 480 Q
(Array extend [)51 E(\(1 2 3 4 5 \))92 491 Q(fold: block unit: id [)
109.5 E(st> sum := [:x :y | x + y].)92 502 Q(|result|)55.5 E 4.5(aB)92
513 S 109.5(lockClosure result)-4.5 F(:= id.)4.5 E
(st> s := a fold: sum unit: 0.)92 524 Q(15)92 535 Q
(st> prod := [:x :y | x * y].)92 546 Q 4.5(aB)92 557 S(lockClosure)-4.5
E(st> p := a fold: prod unit: 1.)92 568 Q(120)92 579 Q 234.5 471.5 234.5
581.5 DL F1(8.)79.5 597 Q F2(Smalltalk.)5 E F1 .414(Extend class)5.414 F
F3(Array)2.914 E F1 .414(with the k)2.914 F -.15(ey)-.1 G -.1(wo).15 G
.414(rd method).1 F F3(innerprod)2.914 E F1 .414
(which computes the inner product of itself)2.914 F .22(with its ar)92
609 R 2.72(gument. Note)-.18 F .22(that an error is thro)2.72 F .22
(wn if the sizes of the arrays are dif)-.25 F 2.72(ferent. The)-.25 F
.22(formula for an inner)2.72 F(product is sho)92 621 Q(wn at the left.)
-.25 E(Finish the method.)5 E F4([2)5 E F5(4)A F4(])A F6(p)93.25 638 Q
/F7 10/Symbol SF(=)2.99 E/F8 7/Times-Italic@0 SF(i)6.145 8.725 M/F9 15
/Symbol SF(S)-5.291 -6.278 M F6(a)2.03 -2.447 M F8(i).267 2 M F6(b)1.022
-2 M F8(i).237 2 M F3(Array extend [)151.61 638 Q(innerprod: other [)
165.11 649 Q(self size = other size)178.61 660 Q
(ifFalse: [^ self error: 'innerprod different sizes'])178.61 671 Q
(ifTrue: [)178.61 682 Q 144.11 629.5 144.11 684.5 DL 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CSE-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2020 \203 Midterm Exam)-.18 E/F1 10/Times-Roman@0 SF 2.5(3o)
154.27 G 2.5(f4)-2.5 G(9.)79.5 70 Q/F2 10/Times-BoldItalic@0 SF(OCaml.)5
E F1 .11(Assume the declarations in the top of the table at the left.)
5.11 F .111(De\214ne the function)5.111 F/F3 10/Courier-Narrow-Bold@0 SF
(eval)2.611 E F1 .111(which tak)2.611 F .111(es an)-.1 F F3(ex-)2.611 E
(pr)92 82 Q F1 .197(as an ar)2.697 F .197
(gument and returns the \215oat v)-.18 F 2.697(alue. Output)-.25 F .197
(should match the bottom of the table.)2.697 F .197(Note that there are)
5.197 F(no hash tables in this question.)92 94 Q
(The functions are actually present as ar)5 E(guments to the)-.18 E F3
(Expr)2.5 E F1(constructor)2.5 E(.)-.55 E/F4 10/Helvetica-Bold@0 SF([2)5
E/F5 10/ZapfDingbats SF(4)A F4(])A 277.5 104.5 92 104.5 DL F3
(type binfn = float -> float -> float;;)97 113 Q
(type expr = Expr of binfn * expr * expr)97 124 Q 4.5(|N)142 135 S
(um of float;;)-4.5 E 277.5 139.5 92 139.5 DL 4.5(#e)97 148 S(val;;)-4.5
E 4.5(-:e)97 159 S(xpr -> float = <fun>)-4.5 E 4.5(#e)97 170 S
(val \(Expr \(\(+.\),)-4.5 E(Expr \(\(/.\), Num 3., Num 4.\),)133 181 Q
(Expr \(\(/.\), Num 7., Num 8.\)\)\);;)133 192 Q 4.5(-:f)97 203 S
(loat = 1.625)-4.5 E 277.5 207.5 92 207.5 DL 277.5 104.5 277.5 207.5 DL
92 104.5 92 207.5 DL F1 2.5(10. Write)74.5 223 R 2.5(af)2.5 G
(unction to re)-2.5 E -.15(ve)-.25 G(rse a list.).15 E(\(a\))100.9 241 Q
F2(Sc)5 E(heme.)-.1 E F4([2)5 E F5(4)A F4(])A/F6 10/Courier-Narrow@0 SF
(>)117 253 Q F3(reverse)4.5 E F6(#<procedure:reverse>)117 265 Q(>)117
277 Q F3(\(reverse '\(1 2 3 4 5\)\))4.5 E F6(\(5 4 3 2 1\))117 289 Q(>)
117 301 Q F3(\(reverse '\(\)\))4.5 E F6(\(\))117 313 Q F1(\(b\))100.34
339.4 Q F2(OCaml.)5 E F4([2)5 E F5(4)A F4(])A F6(#)117 351.4 Q F3
(reverse;;)4.5 E F6 4.5(-:')117 363.4 S 4.5(al)-4.5 G
(ist -> 'a list = <fun>)-4.5 E(#)117 375.4 Q F3(reverse [1;2;3;4;5];;)
4.5 E F6 4.5(-:i)117 387.4 S(nt list = [5; 4; 3; 2; 1])-4.5 E(#)117
399.4 Q F3(reverse [];;)4.5 E F6 4.5(-:')117 411.4 S 4.5(al)-4.5 G
(ist = [])-4.5 E F1(\(c\))100.9 437.8 Q F2(C/C++.)5 E F1 .526
(Do not use)5.526 F F3(malloc)3.027 E F1 .527(\(3\) or)B F3(free)3.027 E
F1 3.027(\(3\). Do)B .527(not change an)3.027 F 3.027(yv)-.15 G .527
(alue \214eld.)-3.277 F .527(Manipulate the pointer \214elds.)5.527 F
(After modifying the list, return a pointer to the ne)117 449.8 Q 2.5
(wh)-.25 G(ead of the list.)-2.5 E(Use a loop, not recursion.)5 E F4([2)
5 E F5(4)A F4(])A F3(struct node* reverse \(struct node* head\) {)226.5
467.8 Q(struct node {)117 467.8 Q(int value;)130.5 479.8 Q
(struct node* link;)130.5 491.8 Q(};)117 503.8 Q 219 458.3 219 506.3 DL
F1(11.)74.5 569.8 Q F2(Sc)5 E(heme.)-.1 E F1(Dra)5.217 E 2.717(wap)-.15
G .217(icture of the follo)-2.717 F .217(wing e)-.25 F 2.717
(xpression. F)-.15 F .217(or each cell, dra)-.15 F 2.717(was)-.15 G .217
(mall box with tw)-2.717 F 2.716(op)-.1 G 2.716(arts. The)-2.716 F
(\214rst)2.716 E(fe)92 581.8 Q 3.28(wc)-.25 G .78(ells are dra)-3.28 F
.78(wn for you.)-.15 F .78(Fill it in as appropriate and dra)5.78 F 3.28
(wm)-.15 G .78(ore box)-3.28 F 3.28(es. Write)-.15 F .78
(the Greek letter phi \()3.28 F/F7 10/Symbol SF(j)A F1 3.28(\)i)C(n)
-3.28 E .104(each part of a cons cell that has a null pointer)92 593.8 R
5.104(.H)-.55 G -.834(int :)-5.104 F .103
(Since this is a proper list, only some)5.104 F F3(cdr)2.603 E F1 2.603
(sh)C -2.25 -.2(av e)-2.603 H .103(null point-)2.803 F 2.635(ers. F)92
605.8 R .135(or each part of a cell containing a symbol, write the appr\
opriate letter inside that part of the cell.)-.15 F .135(If a part)5.135
F .142(of a cell contains a pointer)92 617.8 R 2.642(,d)-.4 G(ra)-2.642
E 2.642(wa)-.15 G 2.642(na)-2.642 G(rro)-2.642 E 2.642(wf)-.25 G .142
(rom that cell to the one it points at.)-2.642 F .142(If the arro)5.142
F 2.642(wi)-.25 G 2.642(si)-2.642 G 2.642(nt)-2.642 G(he)-2.642 E F3
(cdr)2.642 E F1 .141(part of)2.641 F(the cell dra)92 629.8 Q 2.5(wi)-.15
G 2.5(th)-2.5 G(orizontally to the right.)-2.5 E(If it is in the)5 E F3
(car)2.5 E F1(part of the cell, dra)2.5 E 2.5(wi)-.15 G 2.5(tp)-2.5 G
(ointing do)-2.5 E(wnw)-.25 E(ard.)-.1 E F4([2)5 E F5(4)A F4(])A F3
('\(\(a \(b\)\) \(c d e\) \(\(e\) f\)\))92 647.8 Q 128 671.8 92 671.8 DL
128 653.8 92 653.8 DL 92 653.8 92 671.8 DL 110 653.8 110 671.8 DL 128
653.8 128 671.8 DL 119 662.8 2.232 DC 0 Fg 119 662.8 2.232 DC 0 Cg ST
272 662.8 MT -9 2.232 RL 0 -4.464 RL CL 0 Fg 272 662.8 MT -9 2.232 RL 0
-4.464 RL CL .1 LW 0 Cg ST .4 LW 263 662.8 119 662.8 DL 308 671.8 272
671.8 DL 308 653.8 272 653.8 DL 272 653.8 272 671.8 DL 290 653.8 290
671.8 DL 308 653.8 308 671.8 DL 101 662.8 2.232 DC 0 Fg 101 662.8 2.232
DC 0 Cg ST 101 689.8 MT -2.232 -9 RL 4.464 0 RL CL 0 Fg 101 689.8 MT
-2.232 -9 RL 4.464 0 RL CL .1 LW 0 Cg ST .4 LW 101 680.8 101 662.8 DL
128 689.8 92 689.8 DL 128 707.8 92 707.8 DL 92 707.8 92 689.8 DL 110
707.8 110 689.8 DL 128 707.8 128 689.8 DL 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CSE-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2020 \203 Midterm Exam)-.18 E/F1 10/Times-Roman@0 SF 2.5(4o)
154.27 G 2.5(f4)-2.5 G 1.675(Multiple choice.)72 70 R 3.275 -.8(To t)
6.675 H(he).8 E/F2 10/Times-BoldItalic@0 SF(left)4.175 E F1 1.675
(of each question, write)4.175 F 1.277
(the letter that indicates your answer)72 82 R 6.277(.W)-.55 G(rite)
-6.277 E F2(Z)3.776 E F1 1.276(if you)3.776 F(don')72 94 Q 4.076(tw)-.18
G 1.576(ant to risk a wrong answer)-4.176 F 6.577(.W)-.55 G 1.577
(rong answers)-6.577 F(are w)72 106 Q(orth ne)-.1 E -.05(ga)-.15 G(ti)
.05 E .3 -.15(ve p)-.25 H(oints.).15 E/F3 10/Helvetica-Bold@0 SF([12)5 E
/F4 10/ZapfDingbats SF(4)A F3(])A 289.76 116.5 72 116.5 DL F1(number of)
77 126 Q 7.5<d731>77.72 G(=)-2.5 E/F5 10/Symbol SF(=)46 E/F6 10
/Times-Italic@0 SF(a)3.13 E F1(correct answers)77 138 Q 289.76 142.5 72
142.5 DL(number of)77 152 Q 5<d7bd3d>77.72 G F5(=)41 E F6(b)3.07 E F1
(wrong answers)77 164 Q 289.76 168.5 72 168.5 DL(number of)77 178 Q 7.5
<d730>77.72 G 26(=0)-2.5 G(missing answers)77 190 Q 289.76 194.5 72
194.5 DL(column total)77 204 Q(12)48.82 E F5(=)84.78 E F6(c)3 E(c)77.2
216 Q F5(=)3.11 E F1(max\()2.8 E F6(a).33 E F5(-)2.46 E F6(b)2.47 E F1
1.7(,0).23 G(\))-1.7 E 289.76 220.5 72 220.5 DL 289.76 116.5 289.76
220.5 DL 232.38 116.5 232.38 220.5 DL 191.1 116.5 191.1 220.5 DL 154.6
116.5 154.6 220.5 DL 72 116.5 72 220.5 DL 2.5(1. What)74.5 242 R .225
(kind of function is equi)2.725 F -.25(va)-.25 G .225
(lent to a loop in an).25 F(imperati)87 254 Q .3 -.15(ve l)-.25 H -.834
(anguage ?).15 F 2.5(\(A\) head)88.12 266 R(recursi)2.5 E -.15(ve)-.25 G
2.5(\(B\) mutually)88.67 278 R(recursi)2.5 E -.15(ve)-.25 G 2.5
(\(C\) self)88.67 290 R(recursi)2.5 E -.15(ve)-.25 G 2.5(\(D\) tail)
88.12 302 R(recursi)2.5 E -.15(ve)-.25 G(2.)74.5 320 Q F2(OCaml.)5 E F1
(Fill in the blank.)5 E/F7 10/Courier-Narrow@0 SF(#)87 332 Q 101 332 96
332 DL 104.8 332 99.8 332 DL 109.8 332 104.8 332 DL 114.8 332 109.8 332
DL 119.8 332 114.8 332 DL 124.8 332 119.8 332 DL/F8 10
/Courier-Narrow-Bold@0 SF(\(\(+\)1\) [1;2;3];;)129.3 332 Q F7 4.5(-:i)87
344 S(nt list = [2; 3; 4])-4.5 E F1(\(A\))88.12 356 Q F8(List.fold_left)
5 E F1(\(B\))88.67 368 Q F8(List.fold_right)5 E F1(\(C\))88.67 380 Q F8
(List.map)5 E F1(\(D\))88.12 392 Q F8(List.tl)5 E F1(3.)74.5 410 Q F2
(OCaml.)5 E F1 1.535(Fill in the blank.)6.535 F 1.535
(Use as little function)6.535 F(call stack space as possible.)87 422 Q
F7(#)87 434 Q 101 434 96 434 DL 104.8 434 99.8 434 DL 109.8 434 104.8
434 DL 114.8 434 109.8 434 DL 119.8 434 114.8 434 DL 124.8 434 119.8 434
DL F8(\(+\) 0 [1;2;3];;)129.3 434 Q F7 4.5(-:i)87 446 S(nt = 6)-4.5 E F1
(\(A\))88.12 458 Q F8(List.fold_left)5 E F1(\(B\))88.67 470 Q F8
(List.fold_right)5 E F1(\(C\))88.67 482 Q F8(List.map)5 E F1(\(D\))88.12
494 Q F8(List.tl)5 E F1 2.5(4. Which)74.5 512 R .044(of the follo)2.544
F .044(wing languages has a strong and)-.25 F
(dynamic type checking system)87 524 Q(?)1.666 E 2.5(\(A\) C)88.12 536 R
(and OCaml.)2.5 E 2.5(\(B\) OCaml)88.67 548 R(and Scheme.)2.5 E 2.5
(\(C\) Scheme)88.67 560 R(and C/C++.)2.5 E 2.5(\(D\) Scheme)88.12 572 R
(and Smalltalk.)2.5 E(5.)74.5 590 Q F2(Bash.)5 E F1 5.424(Which en)
10.424 F 5.424(vironment v)-.4 F 5.424(ariable must be)-.25 F 1.467
(adjusted in your)87 602 R F8(.bash_profile)3.967 E F1 1.466
(so that programs)3.967 F(in a non-standard location may be used)87 614
Q(?)1.666 E(\(A\))88.12 626 Q F8($HOME)5 E F1(\(B\))88.67 638 Q F8
($LANG)5 E F1(\(C\))88.67 650 Q F8($PATH)5 E F1(\(D\))88.12 662 Q F8
($USER)5 E F1 2.5(6. P)324.1 76 R(arsing refers to)-.15 E(:)1.666 E 2.5
(\(A\) Ex)337.72 88 R 2.727(ecuting a sequence of statements in the)-.15
F .768(proper order)356.6 100 R 3.268(,p)-.4 G .768
(oasibly altered by interpreting)-3.268 F(gotos.)356.6 112 Q 2.5
(\(B\) Inserting)338.27 124 R(labels into the label table.)2.5 E 2.5
(\(C\) Reading)338.27 136 R .018(characters from the input and assem-)
2.518 F(bling them into tok)356.6 148 Q(ens.)-.1 E 2.5(\(D\) V)337.72
160 R .037(erifying tok)-1.11 F .037(ens are in correct syntactic order)
-.1 F(and assembling the abstract syntax.)356.6 172 Q(7.)324.1 190 Q F2
(Sc)5 E(heme.)-.1 E F1(What is)5 E F8(2)2.5 E F1(?)1.666 E(\(A\))337.72
202 Q F8(\(caar '\(1 2 3\)\))5 E F1(\(B\))338.27 214 Q F8
(\(cadr '\(1 2 3\)\))5 E F1(\(C\))338.27 226 Q F8(\(cdar '\(1 2 3\)\))5
E F1(\(D\))337.72 238 Q F8(\(cddr '\(1 2 3\)\))5 E F1(8.)324.1 256 Q F2
(OCaml.)5 E F1(What is the type of)5 E F8 4.5(\(*\))2.5 G F1(?)-2.834 E
(\(A\))337.72 268 Q F8(int * int -> int)5 E F1(\(B\))338.27 280 Q F8
(int * int <- int)5 E F1(\(C\))338.27 292 Q F8(int -> int -> int)5 E F1
(\(D\))337.72 304 Q F8(int <- int <- int)5 E F1(9.)324.1 322 Q F2
(Smalltalk.)5 E F1(What does)5 E F8 4.5(3+4)2.5 G F1 -.834(mean ?)-2 F
(\(A\))337.72 334 Q F8(3)5 E F1(and)5.184 E F8(+)5.184 E F1 2.685
(are messages that are sent to the)5.184 F(object)356.6 346 Q F8(4)2.5 E
F1(.)A 2.5(\(B\) The)338.27 358 R(function)4.54 E F8(+)4.54 E F1(tak)
4.54 E(es)-.1 E F8(3)4.54 E F1(and)4.54 E F8(4)4.54 E F1 2.04(as ar)4.54
F(guments)-.18 E(and returns a v)356.6 370 Q(alue.)-.25 E 2.5(\(C\) The)
338.27 382 R(message)2.5 E F8 4.5(+4)2.5 G F1(is sent to the object)-2 E
F8(3)2.5 E F1(.)A 2.5(\(D\) The)337.72 394 R(message)3.423 E F8(+)3.423
E F1 .923(is sent to the object)3.423 F F8(3)3.424 E F1 3.424(,w)C(hich)
-3.424 E .77(results in a curried function that accepts)356.6 406 R F8
(4)3.27 E F1(as)3.27 E(an ar)356.6 418 Q(gument.)-.18 E(10.)321.6 436 Q
F2(Sc)2.5 E(heme.)-.1 E F1(Gi)5.533 E -.15(ve)-.25 G(n).15 E F8 .533
(\(define \(f x y\) \(x y y\)\))3.033 F F1 3.034(,w)C(hat)-3.034 E
(will return)336.6 448 Q F8(6)2.5 E F1(?)1.666 E(\(A\))337.72 460 Q F8
(\(f * 2\))5 E F1(\(B\))338.27 472 Q F8(\(f + 3\))5 E F1(\(C\))338.27
484 Q F8(\(f 3 +\))5 E F1(\(D\))337.72 496 Q F8(\(f 3 3\))5 E F1(11.)
321.6 514 Q F2(OCaml.)2.5 E F1(Ho)6.835 E 4.335(wm)-.25 G 1.834
(uch function call stack space is)-4.335 F(occupied by the follo)336.6
526 Q(wing function)-.25 E(?)1.666 E F8(let f n = if n <= 1 then n)336.6
538 Q(else f \(n - 1\) + f \(n - 2\);;)381.6 550 Q F1(\(A\))337.72 562 Q
F6(O)4.9 E F1(\(1\)).27 E(\(B\))338.27 574 Q F6(O)4.9 E F1(\().27 E F6
(n).36 E F1(\)).24 E(\(C\))338.27 586.432 Q F6(O)4.9 E F1(\().27 E F6(n)
.36 E/F9 7/Times-Roman@0 SF(2).24 -4.2 M F1(\)).5 4.2 M(\(D\))337.72
598.432 Q F6(O)4.9 E F1(\(2).27 E/F10 7/Times-Italic@0 SF(n).252 -4.2 M
F1(\)).668 4.2 M(12.)321.6 616.432 Q F2(C/C++/J)2.5 E(ava.)-.4 E F1 .293
(Which of the follo)5.293 F .294(wing binary oper)-.25 F(-)-.2 E 3.38
(ators is e)336.6 628.432 R -.25(va)-.25 G 3.38
(luated in a normal \(meaning lazy\)).25 F -.834(order ?)336.6 640.432 R
.361(That means that sometimes the right oper)5.36 F(-)-.2 E
(and is not e)336.6 652.432 Q -.25(va)-.25 G(luated.).25 E(\(A\))337.72
664.432 Q F8(++)5 E F1(\(B\))338.27 676.432 Q F8(==)5 E F1(\(C\))338.27
688.432 Q F8([])5 E F1(\(D\))337.72 700.432 Q F8(||)5 E 0 Cg EP
%%Trailer
end
%%EOF
