%!PS-Adobe-3.0
%%Creator: groff version 1.22.3
%%CreationDate: Mon Feb  5 21:29:33 2018
%%Title: cmps112-2018q1-midterm.ps
%%BoundingBox: 0 0 612 792
%%Orientation: Portrait
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Times-Bold
%%+ font Times-Roman
%%+ font Times-BoldItalic
%%+ font Helvetica-Bold
%%+ font ZapfDingbats
%%+ font Symbol
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.22 3
%%+ font Courier-Narrow-Bold
%%+ font Courier-Narrow
%%Pages: 4
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 3
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-BoldItalic
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font ZapfDingbats
%%IncludeResource: font Symbol
%%IncludeResource: font Times-Italic
%%BeginResource: font Courier-Narrow-Bold
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Courier-Bold
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Narrow-Bold
[ .75 0 0 1 0 0 ]
/Courier-Bold
MakeTransformedFont
%%EndResource
%%BeginResource: font Courier-Narrow
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Courier
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Narrow
[ .75 0 0 1 0 0 ]
/Courier
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Helvetica-Bold@0 ENC0
/Helvetica-Bold RE/Courier-Narrow-Bold@0 ENC0/Courier-Narrow-Bold RE
/Times-BoldItalic@0 ENC0/Times-BoldItalic RE/Courier-Narrow@0 ENC0
/Courier-Narrow RE/Times-Roman@0 ENC0/Times-Roman RE/Times-Bold@0 ENC0
/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CMPS-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2018 \203 Midterm T)-.18 E(est)-.92 E/F1 10/Times-Roman@0 SF 2.5
(1o)152.98 G 2.5(f4)-2.5 G/F2 9/Courier-Narrow@0 SF
($Id: cmps112-2018q1-midterm.mm,v 1.59 2018-02-05 13:29:32-08 - - $)72
63 Q 43.2 43.2 93.6 106.6 DE ST F1(page 1)80.41 81.2 Q 43.2 43.2 136.8
106.6 DE ST(page 2)123.61 81.2 Q 43.2 43.2 180 106.6 DE ST(page 3)166.81
81.2 Q 43.2 43.2 223.2 106.6 DE ST(page 4)210.01 81.2 Q 540 106.6 MT 0
-21.6 RL -180 0 RL 0 21.6 RL CL ST/F3 10/Times-BoldItalic@0 SF
(Please print clearly)365 81.2 Q(:)1.666 E F0 -.834(Name :)365 102.8 R
540 128.2 MT 0 -21.6 RL -180 0 RL 0 21.6 RL CL ST -.834(CruzID :)365
124.4 R/F4 10/Courier-Narrow@0 SF(@ucsc.edu)495 124.4 Q 66.24 43.2 302.4
106.6 DE 2 LW ST F1 -.8(To)284.189 81.2 S -.834(tal / 42).8 F F3 .111
(No books)72 152.2 R 5.111(;N)1.666 G 2.611(oc)-5.111 G -.834
(alculator ;)-2.611 F .11(No computer)5.111 F 5.11(;N)1.666 G 2.61(oe)
-5.11 G -.834(mail ;)-2.61 F .11(No internet)5.11 F 5.11(;N)1.666 G 2.61
(on)-5.11 G -.834(otes ;)-2.61 F .11(No phone.)5.11 F .11
(Do your scratc)5.11 F 2.61(hw)-.1 G(ork)-2.76 E .495
(elsewhere and enter only your \214nal answ)72 164.2 R .495
(er into the spaces pro)-.1 F 2.995(vided. P)-.15 F .496
(oints will be deducted f)-.55 F .496(or messy answ)-.1 F(ers.)-.1 E
(Unreadable answ)72 176.2 Q(ers will be presumed incorrect.)-.1 E F1 2.5
(1. W)74.5 194.2 R(ithout using an)-.4 E 2.5(yh)-.15 G(igher)-2.5 E
(-order functions, code the function)-.2 E/F5 10/Courier-Narrow-Bold@0
SF(reverse)2.5 E F1 2.5(,w)C(hich will re)-2.5 E -.15(ve)-.25 G
(rse a list.).15 E(\(a\))87 212.2 Q F3(Sc)3.9 E(heme.)-.1 E/F6 10
/Helvetica-Bold@0 SF([2)5 E/F7 10/ZapfDingbats SF(4)A F6(])A F4(>)102
224.2 Q F5(\(reverse '\(1 2 3 4\)\))4.5 E F4(\(4 3 2 1\))102 236.2 Q F1
(\(b\))87 327.4 Q F3(Ocaml.)3.34 E F6([2)5 E F7(4)A F6(])A F4(#)102
339.4 Q F5(reverse [1;2;3;4];;)4.5 E F4 4.5(-:i)102 351.4 S
(nt list = [4; 3; 2; 1])-4.5 E F1(2.)74.5 442.6 Q F3(Ocaml.)5 E F1
(What is the output from each of the follo)5 E -.834(wing ?)-.25 F F6
([2)5 E F7(4)A F6(])A .4 LW 515 453.1 87 453.1 DL F5(reverse;;)92 464.4
Q 515 470.7 87 470.7 DL(\(*\);;)92 482 Q 515 488.3 87 488.3 DL
(1::2::3::[];;)92 499.6 Q 515 505.9 87 505.9 DL
(let car = function x::_ -> x)92 515.4 Q 4.5(|_-)114.5 527.4 S 4.5(>f)
-4.5 G(ailwith "car";;)-4.5 E 515 531.9 87 531.9 DL 515 453.1 515 531.9
DL 225.5 453.1 225.5 531.9 DL 87 453.1 87 531.9 DL F1 2.5(3. W)74.5
547.4 R .413(ithout using an)-.4 F 2.913(yh)-.15 G(igher)-2.913 E .413
(-order functions, code the function)-.2 F F5(fold_left)2.913 E F1 2.913
(,w)C .413(hich will tak)-2.913 F 2.913(eaf)-.1 G .413
(unction, a unit, and a)-2.913 F(list, and fold the list.)87 559.4 Q
(\(a\))87 577.4 Q F3(Sc)3.9 E(heme.)-.1 E F6([2)5 E F7(4)A F6(])A F4(>)
102 589.4 Q F5(\(fold_left + 0 '\(1 2 3\)\))4.5 E F4(6)102 601.4 Q F1
(\(b\))87 663.8 Q F3(Ocaml.)3.34 E F6([2)5 E F7(4)A F6(])A F4(#)102
675.8 Q F5(fold_left;;)4.5 E F4 4.5(-:\()102 687.8 S
('a -> 'b -> 'a\) -> 'a -> 'b list -> 'a = <fun>)-4.5 E(#)102 699.8 Q F5
(fold_left \(+\) 0 [1;2;3];;)4.5 E F4 4.5(-:i)102 711.8 S(nt = 6)-4.5 E
0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CMPS-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2018 \203 Midterm T)-.18 E(est)-.92 E/F1 10/Times-Roman@0 SF 2.5
(2o)152.98 G 2.5(f4)-2.5 G 2.5(4. W)74.5 70 R 1.073(ithout using an)-.4
F 3.573(yh)-.15 G(igher)-3.573 E 1.074
(-order functions, code the function)-.2 F/F2 10/Courier-Narrow-Bold@0
SF(find)3.574 E F1 3.574(,w)C 1.074(hich will return a v)-3.574 F 1.074
(alue associated with a)-.25 F(gi)87 82 Q -.15(ve)-.25 G 3.262(nk).15 G
-.15(ey)-3.362 G 5.762(.I)-.5 G .761(ndicate not found as sho)-5.762 F
.761(wn here.)-.25 F .761
(Use the sample interactions to \214gure out the structure and ar)5.761
F(gu-)-.18 E(ments to this function.)87 94 Q(\(a\))87 112 Q/F3 10
/Times-BoldItalic@0 SF(Ocaml.)3.9 E/F4 10/Helvetica-Bold@0 SF([3)5 E/F5
10/ZapfDingbats SF(4)A F4(])A/F6 10/Courier-Narrow@0 SF(#)102 124 Q F2
(find;;)4.5 E F6 4.5(-:\()102 136 S
('a -> 'b -> bool\) -> 'a -> \('b * 'c\) list -> 'c option = <fun>)-4.5
E(#)102 148 Q F2(find \(=\) 3 [\(1,2\);\(3,4\);\(5,6\)];;)4.5 E F6 4.5
(-:i)102 160 S(nt option = Some 4)-4.5 E(#)102 172 Q F2
(find \(=\) 3 [\(5,6\);\(7,8\)];;)4.5 E F6 4.5(-:i)102 184 S
(nt option = None)-4.5 E F1(\(b\))87 268 Q F3(Sc)3.34 E(heme.)-.1 E F1
(Use)5 E F2(cond)2.5 E F1(and not)2.5 E F2(if)2.5 E F1 5(.R)C(eturn)-5 E
F2(#f)2.5 E F1(if not found.)2.5 E F4([3)5 E F5(4)A F4(])A F6(>)102 280
Q F2(\(find = 3 '\(\(1 2\) \(3 4\) \(5 6\)\)\))4.5 E F6(4)102 292 Q(>)
102 304 Q F2(\(find = 3 '\(\(5 6\) \(7 8\)\)\))4.5 E F6(#f)102 316 Q F1
(5.)74.5 414.4 Q F3(Ocaml.)5 E F1(De\214ne)5.185 E F2(merge)2.685 E F1
.185(which tak)2.685 F .185(es a comparison function and tw)-.1 F 2.685
(os)-.1 G .185(orted lists and mer)-2.685 F .185(ges the tw)-.18 F 2.686
(ol)-.1 G .186(ists into a sin-)-2.686 F(gle sorted list.)87 426.4 Q F4
([3)5 E F5(4)A F4(])A F6(#)87 438.4 Q F2(merge;;)4.5 E F6 4.5(-:\()87
450.4 S('a -> 'a -> bool\) -> 'a list -> 'a list -> 'a list = <fun>)-4.5
E(#)87 462.4 Q F2(merge \(>\) [9;5;1] [4;8;2];;)4.5 E F6 4.5(-:i)87
474.4 S(nt list = [9; 5; 4; 8; 2; 1])-4.5 E(#)87 486.4 Q F2
(merge \(<\) [1;5;9] [2;4;7];;)4.5 E F6 4.5(-:i)87 498.4 S
(nt list = [1; 2; 4; 5; 7; 9])-4.5 E(#)87 510.4 Q F2
(merge \(<\) [] [];;)4.5 E F6 4.5(-:')87 522.4 S 4.5(al)-4.5 G(ist = [])
-4.5 E F1(6.)74.5 642.4 Q F3(Ocaml.)5 E F1(Write a function)5 E F2(trim)
2.5 E F1(which trims leading zeros from a list.)2.5 E F4([1)5 E F5(4)A
F4(])A F6(#)87 654.4 Q F2(trim;;)4.5 E F6 4.5(-:i)87 666.4 S
(nt list -> int list = <fun>)-4.5 E(#)87 678.4 Q F2(trim [1;2;3];;)4.5 E
F6 4.5(-:i)87 690.4 S(nt list = [1; 2; 3])-4.5 E(#)87 702.4 Q F2
(trim [0;0;5];;)4.5 E F6 4.5(-:i)87 714.4 S(nt list = [5])-4.5 E(#)87
726.4 Q F2(trim [0;0;0];;)4.5 E F6 4.5(-:i)87 738.4 S(nt list = [])-4.5
E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CMPS-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2018 \203 Midterm T)-.18 E(est)-.92 E/F1 10/Times-Roman@0 SF 2.5
(3o)152.98 G 2.5(f4)-2.5 G(7.)74.5 70 Q/F2 10/Times-BoldItalic@0 SF
(Ocaml.)5 E F1(De\214ne)6.198 E/F3 10/Courier-Narrow-Bold@0 SF(sub')
3.698 E F1 1.197(according to the programming project.)3.697 F 1.197
(It tak)6.197 F 1.197(es tw)-.1 F(o)-.1 E F3 1.197(int list)3.697 F F1
3.697(sr)C 1.197(epresenting multiprecise)-3.697 F .925
(numbers and subtracts the second from the \214rst.)87 82 R .925
(Assume the \214rst number is not less than the second number)5.925 F(.)
-.55 E/F4 10/Helvetica-Bold@0 SF([5)87 94 Q/F5 10/ZapfDingbats SF(4)A F4
(])A/F6 10/Courier-Narrow@0 SF(#)87 106 Q F3(sub';;)4.5 E F6 4.5(-:i)87
118 S(nt list -> int list -> int list = <fun>)-4.5 E(#)87 130 Q F3
(sub' [1;2;3;4] [4;3;2;1];;)4.5 E F6 4.5(-:i)87 142 S
(nt list = [7; 8; 0; 3])-4.5 E(#)87 154 Q F3(sub' [0;0;0;9] [2];;)4.5 E
F6 4.5(-:i)87 166 S(nt list = [8; 9; 9; 8])-4.5 E(#)87 178 Q F3
(sub' [3;3;3] [3;3;3];;)4.5 E F6 4.5(-:i)87 190 S(nt list = [])-4.5 E F1
1.675(Multiple choice.)72 418 R 3.275 -.8(To t)6.675 H(he).8 E F2(left)
4.175 E F1 1.675(of each question, write)4.175 F 1.276
(the letter that indicates your answer)72 430 R 6.277(.W)-.55 G(rite)
-6.277 E F2(Z)3.777 E F1 1.277(if you)3.777 F(don')72 442 Q 4.077(tw)
-.18 G 1.576(ant to risk a wrong answer)-4.177 F 6.576(.W)-.55 G 1.576
(rong answers)-6.576 F(are w)72 454 Q(orth ne)-.1 E -.05(ga)-.15 G(ti)
.05 E .3 -.15(ve p)-.25 H(oints.).15 E F4([5)5 E F5(4)A F4(])A 289.76
464.5 72 464.5 DL F1(number of)77 474 Q 7.5<d731>80.72 G(=)-2.5 E/F7 10
/Symbol SF(=)43 E/F8 10/Times-Italic@0 SF(a)3.13 E F1(correct answers)77
486 Q 289.76 490.5 72 490.5 DL(number of)77 500 Q 5<d7bd3d>80.72 G F7(=)
38 E F8(b)3.07 E F1(wrong answers)77 512 Q 289.76 516.5 72 516.5 DL
(number of)77 526 Q 7.5<d730>80.72 G 23(=0)-2.5 G(missing answers)77 538
Q 289.76 542.5 72 542.5 DL(column total)77 552 Q(5)56.82 E F7(=)81.78 E
F8(c)3 E(c)77.2 564 Q F7(=)3.11 E F1(max\()2.8 E F8(a).33 E F7(-)2.46 E
F8(b)2.47 E F1 1.7(,0).23 G(\))-1.7 E 289.76 568.5 72 568.5 DL 289.76
464.5 289.76 568.5 DL 235.38 464.5 235.38 568.5 DL 194.1 464.5 194.1
568.5 DL 154.6 464.5 154.6 568.5 DL 72 464.5 72 568.5 DL(1.)79.5 590 Q
F3(\(\(lambda \(x\) \(* x x\)\) \(+ 2 3\)\))5 E F1(\(A\))93.12 602 Q F3
(\(+ 2 3\))5 E F1(\(B\))93.67 614 Q F3(12)5 E F1(\(C\))93.67 626 Q F3
(25)5 E F1(\(D\))93.12 638 Q F3(arity mismatch)5 E F1 2.5(2. In)79.5 656
R 3.238(ag)3.238 G .739(arbage collected language lik)-3.288 F 3.239(eJ)
-.1 G -.2(av)-3.239 G .739(a, which)-.05 F(does not ha)92 668 Q .3 -.15
(ve a)-.2 H F3(free)2.65 E F1(function, which is possible)2.5 E(?)1.666
E 2.5(\(A\) dangling)93.12 680 R(pointers b)2.5 E(ut not memory leak)-.2
E 2.5(\(B\) memory)93.67 692 R(leak and dangling pointers)2.5 E 2.5
(\(C\) memory)93.67 704 R(leak b)2.5 E(ut not dangling pointers)-.2 E
2.5(\(D\) neither)93.12 716 R(memory leak nor dangling pointers)2.5 E
2.5(3. In)329.1 424 R 1.015(C++ and Ja)3.515 F -.25(va)-.2 G 3.515(,w)
.25 G 1.015(hat kind of statement allo)-3.515 F(ws)-.25 E .294
(an immediate transfer of control from the current)341.6 436 R 1.77
(function up se)341.6 448 R -.15(ve)-.25 G 1.77(ral le).15 F -.15(ve)
-.25 G 1.77(ls, unwinding the func-).15 F(tion call stack)341.6 460 Q(?)
1.666 E(\(A\))342.72 472 Q F3(break)5 E F1(\(B\))343.27 484 Q F3(goto)5
E F1(\(C\))343.27 496 Q F3(return)5 E F1(\(D\))342.72 508 Q F3(throw)5 E
F1 2.5(4. Smalltalk')329.1 526 R 2.5(st)-.55 G(ype system is)-2.5 E(:)
1.666 E 2.5(\(A\) strong)342.72 538 R(and dynamic)2.5 E 2.5
(\(B\) strong)343.27 550 R(and static)2.5 E 2.5(\(C\) weak)343.27 562 R
(and dynamic)2.5 E 2.5(\(D\) weak)342.72 574 R(and static)2.5 E 2.5
(5. A)329.1 592 R 1.703(partially parameterized function, such as)4.203
F F3(\(+\))4.204 E F1(in Ocaml, is said to be)341.6 604 Q(:)1.666 E 2.5
(\(A\) curried)342.72 616 R 2.5(\(B\) raised)343.27 628 R 2.5
(\(C\) thunk)343.27 640 R(ed)-.1 E 2.5(\(D\) tupled)342.72 652 R 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CMPS-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2018 \203 Midterm T)-.18 E(est)-.92 E/F1 10/Times-Roman@0 SF 2.5
(4o)152.98 G 2.5(f4)-2.5 G 1.675(Multiple choice.)72 70 R 3.275 -.8
(To t)6.675 H(he).8 E/F2 10/Times-BoldItalic@0 SF(left)4.175 E F1 1.675
(of each question, write)4.175 F 1.276
(the letter that indicates your answer)72 82 R 6.277(.W)-.55 G(rite)
-6.277 E F2(Z)3.777 E F1 1.277(if you)3.777 F(don')72 94 Q 4.077(tw)-.18
G 1.576(ant to risk a wrong answer)-4.177 F 6.576(.W)-.55 G 1.576
(rong answers)-6.576 F(are w)72 106 Q(orth ne)-.1 E -.05(ga)-.15 G(ti)
.05 E .3 -.15(ve p)-.25 H(oints.).15 E/F3 10/Helvetica-Bold@0 SF([12)5 E
/F4 10/ZapfDingbats SF(4)A F3(])A 289.76 116.5 72 116.5 DL F1(number of)
77 126 Q 7.5<d731>80.72 G(=)-2.5 E/F5 10/Symbol SF(=)43 E/F6 10
/Times-Italic@0 SF(a)3.13 E F1(correct answers)77 138 Q 289.76 142.5 72
142.5 DL(number of)77 152 Q 5<d7bd3d>80.72 G F5(=)38 E F6(b)3.07 E F1
(wrong answers)77 164 Q 289.76 168.5 72 168.5 DL(number of)77 178 Q 7.5
<d730>80.72 G 23(=0)-2.5 G(missing answers)77 190 Q 289.76 194.5 72
194.5 DL(column total)77 204 Q(12)51.82 E F5(=)81.78 E F6(c)3 E(c)77.2
216 Q F5(=)3.11 E F1(max\()2.8 E F6(a).33 E F5(-)2.46 E F6(b)2.47 E F1
1.7(,0).23 G(\))-1.7 E 289.76 220.5 72 220.5 DL 289.76 116.5 289.76
220.5 DL 235.38 116.5 235.38 220.5 DL 194.1 116.5 194.1 220.5 DL 154.6
116.5 154.6 220.5 DL 72 116.5 72 220.5 DL 2.5(1. In)79.5 242 R 1.177
(an eager functional language, which function)3.676 F 3.129
(can not be written in a tail-recursi)92 254 R 3.428 -.15(ve m)-.25 H
(anner).15 E(without re)92 266 Q -.15(ve)-.25 G(rsing a list).15 E(?)
1.666 E 2.5(\(A\) \214bonacci)93.12 278 R 2.5(\(B\) fold_left)93.67 290
R 2.5(\(C\) fold_right)93.67 302 R 2.5(\(D\) length)93.12 314 R 2.5
(2. What)79.5 332 R(will print)2.5 E(:)1.666 E/F7 10
/Courier-Narrow-Bold@0 SF(5)92 344 Q F1(\(A\))93.12 356 Q F7
(\(\(lambda \(a b\) \(+ a b\)\) '\(2 3\)\))5 E F1(\(B\))93.67 368 Q F7
(\(\(lambda \(a b\) \(+ a b\)\) 2 3\))5 E F1(\(C\))93.67 380 Q F7
(\(lambda \(a b\) \(+ a b\)\) \(2 3\))5 E F1(\(D\))93.12 392 Q F7
(\(lambda \(a b\) \(+ a b\)\) 2 3)5 E F1 2.5(3. Output)79.5 410 R -.834
(of :)2.5 F F7 4.5(#\()92 422 S(-\);;)-4.5 E F1(\(A\))93.12 434 Q F7 4.5
(-:i)5 G(nt * int * int = <fun>)-4.5 E F1(\(B\))93.67 446 Q F7 4.5(-:i)5
G(nt * int -> int = <fun>)-4.5 E F1(\(C\))93.67 458 Q F7 4.5(-:i)5 G
(nt -> int * int = <fun>)-4.5 E F1(\(D\))93.12 470 Q F7 4.5(-:i)5 G
(nt -> int -> int = <fun>)-4.5 E F1 2.5(4. Which)79.5 488 R 1.086
(language has a strong dynamic type sys-)3.585 F -.834(tem ?)92 500 R
2.5(\(A\) C)93.12 512 R(and C++)2.5 E 2.5(\(B\) Ja)93.67 524 R -.25(va)
-.2 G 2.5(\(C\) Ocaml)93.67 536 R 2.5(\(D\) Scheme)93.12 548 R 2.5
(5. What)79.5 566 R(will print)2.5 E(:)1.666 E F7(\(1 2 7\))92 578 Q F1
(\(A\))93.12 590 Q F7('\(1 2 ,\(+ 3 4\)\))5 E F1(\(B\))93.67 602 Q F7
(,\(1 2 `\(+ 3 4\)\))5 E F1(\(C\))93.67 614 Q F7(`\(1 2 '\(+ 3 4\)\))5 E
F1(\(D\))93.12 626 Q F7(`\(1 2 ,\(+ 3 4\)\))5 E F1 2.5(6. What)329.1 76
R(is the running time of)2.5 E(:)1.666 E F7(let rec fib n =)341.6 88 Q
(if n <= 1)359.6 100 Q(then n)377.6 112 Q
(else fib \(n - 1\) + fib \(n - 2\);;)377.6 124 Q F1(\(A\))342.72 136 Q
F6(O)4.9 E F1(\().27 E F6(n).36 E F1(\)).24 E(\(B\))343.27 148 Q F6(O)
4.9 E F1(\().27 E F6(n).36 E F1(log)1.94 E F6(n)2.06 E F1(\)).24 E
(\(C\))343.27 160.432 Q F6(O)4.9 E F1(\().27 E F6(n).36 E/F8 7
/Times-Roman@0 SF(2).24 -4.2 M F1(\)).5 4.2 M(\(D\))342.72 172.432 Q F6
(O)4.9 E F1(\(2).27 E/F9 7/Times-Italic@0 SF(n).252 -4.2 M F1(\)).668
4.2 M 2.5(7. What)329.1 190.432 R .487(are the \214rst tw)2.987 F 2.987
(oc)-.1 G .486(haracters in a Unix script)-2.987 F -.834(\214le ?)341.6
202.432 R(\(A\))342.72 214.432 Q F7(#!)5 E F1(\(B\))343.27 226.432 Q F7
(%!)5 E F1(\(C\))343.27 238.432 Q F7(/*)5 E F1(\(D\))342.72 250.432 Q F7
($<)5 E F1 2.5(8. What)329.1 268.432 R(will print)2.5 E(:)1.666 E F7 4.5
(-:f)341.6 280.432 S(loat = 5.)-4.5 E F1(\(A\))342.72 292.432 Q F7
(\(+ 2. 3.\);;)5 E F1(\(B\))343.27 304.432 Q F7(\(+\) 2. 3.;;)5 E F1
(\(C\))343.27 316.432 Q F7(2. + 3.;;)5 E F1(\(D\))342.72 328.432 Q F7
(2. +. 3.;;)5 E F1 2.5(9. What)329.1 346.432 R 1.27
(are the operator precedences is Smalltalk,)3.77 F 2.722
(with the highest at the left and lo)341.6 358.432 R 2.722(west at the)
-.25 F -.834(right ?)341.6 370.432 R 2.5(\(A\) binary)342.72 382.432 R
2.5(,k)-.65 G -.15(ey)-2.6 G -.1(wo).15 G(rd, unary).1 E 2.5(\(B\) k)
343.27 394.432 R -.15(ey)-.1 G -.1(wo).15 G(rd, binary).1 E 2.5(,u)-.65
G(nary)-2.5 E 2.5(\(C\) k)343.27 406.432 R -.15(ey)-.1 G -.1(wo).15 G
(rd, unary).1 E 2.5(,b)-.65 G(inary)-2.5 E 2.5(\(D\) unary)342.72
418.432 R 2.5(,b)-.65 G(inary)-2.5 E 2.5(,k)-.65 G -.15(ey)-2.6 G -.1
(wo).15 G(rd).1 E 2.5(10. Of)324.1 436.432 R
(these languages, which one is the oldest)2.5 E(?)1.666 E 2.5
(\(A\) Algol)342.72 448.432 R(60)2.5 E 2.5(\(B\) C++)343.27 460.432 R
2.5(\(C\) F)343.27 472.432 R(ortran)-.15 E 2.5(\(D\) Ja)342.72 484.432 R
-.25(va)-.2 G 2.5(11. What)324.1 502.432 R(produces)3.232 E F7(x)3.232 E
F1 .732(itself as a result of this e)3.232 F(xpres-)-.15 E
(sion, assuming)341.6 514.432 Q F7(x)2.5 E F1
(is a list of at least one element)2.5 E(?)1.666 E(\(A\))342.72 526.432
Q F7(\(cons \(car x\) \(cdr x\)\))5 E F1(\(B\))343.27 538.432 Q F7
(\(cons \(cdr x\) \(car x\)\))5 E F1(\(C\))343.27 550.432 Q F7
(\(list \(car x\) \(cdr x\)\))5 E F1(\(D\))342.72 562.432 Q F7
(\(list \(cdr x\) \(car x\)\))5 E F1 2.5(12. Ocaml')324.1 580.432 R 2.5
(st)-.55 G(ype system is)-2.5 E(:)1.666 E 2.5(\(A\) strong)342.72
592.432 R(and dynamic)2.5 E 2.5(\(B\) strong)343.27 604.432 R
(and static)2.5 E 2.5(\(C\) weak)343.27 616.432 R(and dynamic)2.5 E 2.5
(\(D\) weak)342.72 628.432 R(and static)2.5 E 0 Cg EP
%%Trailer
end
%%EOF
