%!PS-Adobe-3.0
%%Creator: groff version 1.22.3
%%CreationDate: Fri Mar 13 00:09:56 2020
%%Title: cse112-2020q1-final.ps
%%BoundingBox: 0 0 612 792
%%Orientation: Portrait
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Times-Bold
%%+ font Times-Roman
%%+ font Times-BoldItalic
%%+ font Helvetica-Bold
%%+ font ZapfDingbats
%%+ font Symbol
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.22 3
%%+ font Courier-Narrow-Bold
%%+ font Courier-Narrow
%%Pages: 4
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 3
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-BoldItalic
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font ZapfDingbats
%%IncludeResource: font Symbol
%%IncludeResource: font Times-Italic
%%BeginResource: font Courier-Narrow-Bold
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Courier-Bold
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Narrow-Bold
[ .75 0 0 1 0 0 ]
/Courier-Bold
MakeTransformedFont
%%EndResource
%%BeginResource: font Courier-Narrow
%!PS-Adobe-3.0 Resource-Font
%%DocumentNeededResources: font Courier
/MakeTransformedFont{
findfont dup maxlength dict begin
{
exch dup dup/FID ne exch/UniqueID ne and{
exch def
}{
pop pop
}ifelse
}forall
/FontBBox
currentdict/FontBBox get
4 array copy def
FontBBox aload pop
4 index transform 4 2 roll
4 index transform 4 2 roll
FontBBox astore pop
FontMatrix exch matrix concatmatrix
/FontMatrix exch def
dup/FontName exch def
currentdict end
definefont pop
}bind def
/Courier-Narrow
[ .75 0 0 1 0 0 ]
/Courier
MakeTransformedFont
%%EndResource
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Helvetica-Bold@0 ENC0
/Helvetica-Bold RE/Times-BoldItalic@0 ENC0/Times-BoldItalic RE
/Courier-Narrow-Bold@0 ENC0/Courier-Narrow-Bold RE/Courier-Narrow@0 ENC0
/Courier-Narrow RE/Times-Roman@0 ENC0/Times-Roman RE/Times-Bold@0 ENC0
/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CSE-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2020 \203 Final Exam)-.18 E/F1 10/Times-Roman@0 SF 2.5(1o)170.36
G 2.5(f4)-2.5 G/F2 9/Courier-Narrow@0 SF
($Id: cse112-2020q1-final.mm,v 1.112 2020-03-12 17:09:55-07 - - $)72 63
Q 43.2 43.2 93.6 104.2 DE ST F1(page 1)80.41 78.8 Q 43.2 43.2 136.8
104.2 DE ST(page 2)123.61 78.8 Q 43.2 43.2 180 104.2 DE ST(page 3)166.81
78.8 Q 43.2 43.2 223.2 104.2 DE ST(page 4)210.01 78.8 Q 540 82.6 MT 0
-21.6 RL -180 0 RL 0 21.6 RL CL ST F0(Last Name)365 78.8 Q(:)1.666 E 540
104.2 MT 0 -21.6 RL -180 0 RL 0 21.6 RL CL ST(First Name)365 100.4 Q(:)
1.666 E 540 125.8 MT 0 -21.6 RL -180 0 RL 0 21.6 RL CL ST -.834
(CruzID :)365 122 R/F3 10/Courier-Narrow-Bold@0 SF(@ucsc.edu)495 122 Q
66.24 43.2 302.4 104.2 DE 2 LW ST F1 -.8(To)284.189 78.8 S -.834
(tal / 40).8 F/F4 10/Times-BoldItalic@0 SF .161(No books)72 137.8 R
5.161(;N)1.666 G 2.661(oc)-5.161 G -.834(alculator ;)-2.661 F .16
(No computer)5.161 F 5.16(;N)1.666 G 2.66(oe)-5.16 G -.834(mail ;)-2.66
F .16(No internet)5.16 F 5.16(;N)1.666 G 2.66(on)-5.16 G -.834(otes ;)
-2.66 F .16(No phone.)5.16 F -.55(Po)5.16 G .16(ints will be deduct-).55
F .596(ed f)72 149.8 R .596(or messy or unreadable answ)-.1 F 3.096
(ers. Do)-.1 F .597(your scratc)3.097 F 3.097(hw)-.1 G .597
(ork elsewhere and enter only your \214nal answ)-3.247 F .597
(er into the)-.1 F(spaces pro)72 161.8 Q(vided.)-.15 E(OCaml.)72 179.8 Q
F1 -.15(Fo)5.654 G 3.154(ra).15 G .653
(ll questions asking for code in OCaml, you need not e)-3.154 F .653
(xplicitly specify the type of a function')-.15 F 3.153(sa)-.55 G -.18
(rg)-3.153 G(u-).18 E(ment or the type of its result.)72 191.8 Q(Ob)5 E
(viously)-.15 E 2.5(,O)-.65 G(Caml uses type inference.)-2.5 E(1.)79.5
209.8 Q F4(Bash.)5 E F1(Assume the interpreter for the language)5 E F3
(nli)2.5 E F1(has the e)2.5 E -.15(xe)-.15 G(cutable binary in).15 E F3
(/opt/local/bin/nli)2.5 E F1(.)A 2.5(\(a\) In)100.9 227.8 R
(order to call it just by using the name)2.5 E F3(nli)2.5 E F1 2.5(,w)C
(hat \214le in)-2.5 E F3($HOME)2.5 E F1(should you modify)2.5 E(?)1.666
E/F5 10/Helvetica-Bold@0 SF([1)5 E/F6 10/ZapfDingbats SF(4)A F5(])A F1
2.5(\(b\) What)100.34 266.8 R
(command should you add to the \214le mentioned in \(a\))2.5 E(?)1.666 E
F5([1)5 E F6(4)A F5(])A F1 2.5(\(c\) If)100.9 305.8 R
(you use this program as an interpreter for the program)2.5 E F3
(foo.nli)2.5 E F1 2.5(,w)C(hat is the \214rst line of this \214le)-2.5 E
(?)1.666 E F5([1)5 E F6(4)A F5(])A F1 2.5(\(d\) What)100.34 344.8 R
(command must you type to mak)2.5 E(e)-.1 E F3(foo.nli)2.5 E F1(an e)2.5
E -.15(xe)-.15 G(cutable \214le).15 E(?)1.666 E F5([1)5 E F6(4)A F5(])A
F1(2.)79.5 383.8 Q F4(Prolog.)5 E F1(De\214ne the follo)5 E
(wing terms \(functions\).)-.25 E(See the e)5 E(xamples for e)-.15 E
(xpected results.)-.15 E(\(a\))100.9 401.8 Q F3(has/2)5 E F1(tak)2.573 E
.073(es an atom and a list and succeeds if the atom is some)-.1 F .073
(where in the list.)-.25 F .073(Use uni\214cation for com-)5.073 F
(parison.)117 413.8 Q F5([1)5 E F6(4)A F5(])A/F7 10/Courier-Narrow@0 SF
(?-)117 425.8 Q F3(has\(3,[1,2,3,4]\).)4.5 E F7(true.)117 437.8 Q(?-)117
449.8 Q F3(has\(9,[1,2,3,4]\).)4.5 E F7(false.)117 461.8 Q F1(\(b\))
100.34 479.8 Q F3(rev/3)5 E F1 .419(is an accumulator helper for)2.919 F
F3(rev/2)2.919 E F1 2.919(,w)C .419(hich re)-2.919 F -.15(ve)-.25 G .419
(rses a list.).15 F .419(The middle ar)5.419 F .419(gument to)-.18 F F3
(rev/3)2.919 E F1 .418(is the ac-)2.919 F(cumulator)117 491.8 Q 5(.A)
-.55 G(ssume the rule)-5 E F3(rev\(L,M\) :- rev\(L,[],M\).)2.5 E F5([1)5
E F6(4)A F5(])A F7(?-)117 503.8 Q F3(rev\([1,2,3,4],X\).)4.5 E F7 4.5
(X=[)117 515.8 S(4, 3, 2, 1].)-4.5 E(?-)117 527.8 Q F3(rev\([],X\).)4.5
E F7 4.5(X=[)117 539.8 S(].)-4.5 E F1(\(c\))100.9 557.8 Q F3(len/2)5 E
F1(computes the length of a list.)2.5 E F5([1)5 E F6(4)A F5(])A F7(?-)
117 569.8 Q F3(len\([],N\).)4.5 E F7 4.5(N=0)117 581.8 S(.)-4.5 E(?-)117
593.8 Q F3(len\([1,2,3,4],N\).)4.5 E F7 4.5(N=4)117 605.8 S(.)-4.5 E F1
(3.)79.5 623.8 Q F4 -.5(Pe)5 G(rl.).5 E F1 .175(Write a program that wi\
ll read \214les, and at end print out the number of lines, w)5.175 F
.176(ords, and characters in the)-.1 F 2.501(\214les. A)92 635.8 R -.1
(wo)2.501 G .001(rd is an).1 F 2.501(ys)-.15 G .001
(equence of characters not containing white space.)-2.501 F(Use)5 E F3
(<>)2.5 E F1(for input.)2.5 E(An e)5 E(xample is sho)-.15 E(wn)-.25 E
(at the left.)92 647.8 Q F5([3)5 E F6(4)A F5(])A F7(bash$)92 665.8 Q F3
(cat /tmp/foo)4.5 E F7(This is a test)92 677.8 Q(of the word count)92
689.8 Q(program.)92 701.8 Q(Has 4 lines.)92 713.8 Q(bash$)92 725.8 Q F3
(wc.perl /tmp/foo)4.5 E F7 4.5(41)92 737.8 S 4.5(25)-4.5 G(5)-4.5 E 0 Cg
EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CSE-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2020 \203 Final Exam)-.18 E/F1 10/Times-Roman@0 SF 2.5(2o)170.36
G 2.5(f4)-2.5 G(4.)79.5 70 Q/F2 10/Times-BoldItalic@0 SF(Prolog.)5 E F1
2.5(\(a\) Write)100.9 88 R 2.5(as)2.5 G(et of f)-2.5 E(acts called)-.1 E
/F3 10/Courier-Narrow-Bold@0 SF(arrow)2.5 E F1
(which describe this graph, where)2.5 E F3(arrow\(a,b\))2.5 E F1
(means that)2.5 E F3(a)2.5 E/F4 10/Symbol SF<ae>A F3(b)A F1(.)A/F5 10
/Helvetica-Bold@0 SF([2)5 E/F6 10/ZapfDingbats SF(4)A F5(])A 123.012
99.976 6.012 DC ST F1(a)120.756 102.176 Q 153.036 99.976 6.012 DC ST(b)
150.5 102.176 Q 147.024 99.976 MT -5.976 1.512 RL 0 -3.024 RL CL 0 Fg
147.024 99.976 MT -5.976 1.512 RL 0 -3.024 RL CL .1 LW 0 Cg ST .4 LW
141.048 99.976 129.024 99.976 DL 123.012 130 6.012 DC ST(c)120.756 132.2
Q 127.224 125.752 MT 3.168 -5.328 RL 2.088 2.088 RL CL 0 Fg 127.224
125.752 MT 3.168 -5.328 RL 2.088 2.088 RL CL .1 LW 0 Cg ST .4 LW 131.472
121.504 148.752 104.224 DL 122.976 106.024 MT 1.512 5.976 RL -3.024 0 RL
CL 0 Fg 122.976 106.024 MT 1.512 5.976 RL -3.024 0 RL CL .1 LW 0 Cg ST
.4 LW 122.976 112 122.976 124.024 DL 182.988 99.976 6.012 DC ST(d)
180.524 102.176 Q 176.976 99.976 MT -5.976 1.512 RL 0 -3.024 RL CL 0 Fg
176.976 99.976 MT -5.976 1.512 RL 0 -3.024 RL CL .1 LW 0 Cg ST .4 LW 171
99.976 158.976 99.976 DL 182.988 130 6.012 DC ST(e)180.804 132.2 Q
183.024 124.024 MT -1.512 -5.976 RL 3.024 0 RL CL 0 Fg 183.024 124.024
MT -1.512 -5.976 RL 3.024 0 RL CL .1 LW 0 Cg ST .4 LW 183.024 118.048
183.024 106.024 DL 129.024 130 MT 5.976 -1.512 RL 0 3.024 RL CL 0 Fg
129.024 130 MT 5.976 -1.512 RL 0 3.024 RL CL .1 LW 0 Cg ST .4 LW 135 130
176.976 130 DL 2.5(\(b\) Gi)100.34 159.976 R -.15(ve)-.25 G(n).15 E F3
(ispath)3.416 E F1 .916(as de\214ned here, write the relation)3.416 F F3
(ispath\(A,Visited,B\))3.417 E F1 .917
(which succeeds if there is a path)3.417 F(from)117 171.976 Q F3(A)3.089
E F1(to)3.089 E F3(B)3.089 E F1 .589(and a)3.089 F -.2(vo)-.2 G .589
(ids in\214nite tra).2 F -.15(ve)-.2 G .588(rsals around a loop.).15 F
(Use)5.588 E F3(Visited)3.088 E F1 .588(to k)3.088 F .588
(eep track of the nodes visited.)-.1 F -.834(Hint :)117 183.976 R F3
(member\(X,L\))5 E F1(succeeds if)2.5 E F3(X)2.5 E F1
(is a member of list)2.5 E F3(L)2.5 E F1(.)A F5([2)5 E F6(4)A F5(])A F3
(not\(X\) :- X, !, fail.)117 195.976 Q(not\(_\).)117 207.976 Q
(ispath\(A,A\).)117 219.976 Q(ispath\(A,B\) :- ispath\(A,[],B\).)117
231.976 Q F1 2.5(5. Code)79.5 295.816 R .567(the function)3.067 F F3
(find)3.067 E F1 5.567(.R)C .567(eturn the v)-5.567 F .567
(alue associated with a gi)-.25 F -.15(ve)-.25 G 3.067(nk).15 G -.15(ey)
-3.167 G 5.567(.R)-.5 G .567(eturn a special v)-5.567 F .568
(alue as indicated be-)-.25 F(lo)92 307.816 Q 2.628(wi)-.25 G 2.628(fn)
-2.628 G .128(ot found.)-2.628 F .128(The \214rst ar)5.128 F .128
(gument is a comparison function to be used in the search.)-.18 F .128
(The second ar)5.128 F .128(gument is)-.18 F
(the left operand of the comparator)92 319.816 Q 2.5(,a)-.4 G(nd the k)
-2.5 E -.15(ey)-.1 G 2.5(si).15 G 2.5(nt)-2.5 G
(he list are used as its right operand.)-2.5 E(\(a\))100.9 337.816 Q F2
(OCaml.)5 E F1 .818(Search a list of tuples.)5.818 F .818
(Note that the comma creates a tuple and the semi-colon separates ele-)
5.818 F(ments of a list.)117 349.816 Q F5([2)5 E F6(4)A F5(])A/F7 10
/Courier-Narrow@0 SF(#)117 361.816 Q F3(find \(=\) 3 [1,2; 3,4; 5,6];;)
4.5 E F7 4.5(-:i)117 373.816 S(nt option = Some 4)-4.5 E(#)117 385.816 Q
F3(find \(=\) 9 [0,1; 2,3; 4,5];;)4.5 E F7 4.5(-:i)117 397.816 S
(nt option = None)-4.5 E(#)117 409.816 Q F3
(find \(<\) 8 [9,2; 7,3; 5,9];;)4.5 E F7 4.5(-:i)117 421.816 S
(nt option = Some 2)-4.5 E F1(\(b\))100.34 485.656 Q F2(Sc)5 E(heme.)-.1
E F1(Return)5 E F3(#f)2.5 E F1(if not found.)2.5 E(The list ar)5 E
(gument is a list of lists of length 2.)-.18 E F5([2)5 E F6(4)A F5(])A
F7(>)117 497.656 Q F3(\(find = 3 '\(\(1 2\)\(3 4\)\(5 6\)\)\))4.5 E F7
(4)117 509.656 Q(>)117 521.656 Q F3
(\(find = 9 '\(\(0 1\)\(2 3\)\(4 5\)\)\))4.5 E F7(#f)117 533.656 Q(>)117
545.656 Q F3(\(find < 8 '\(\(2 2\)\(9 3\)\(9 9\)\)\))4.5 E F7(3)117
557.656 Q F1(6.)79.5 621.496 Q F2(Sc)5 E(heme.)-.1 E F1 1.611
(Write a function to re)6.611 F -.15(ve)-.25 G 1.611(rse a list.).15 F
1.611(Assume the ar)6.611 F 1.61(gument is a proper list.)-.18 F -1.1
(Yo)6.61 G 1.61(ur solution must, of)1.1 F(course, be tail recursi)92
633.496 Q -.15(ve)-.25 G 5(.U).15 G(se)-5 E F3(foldl)2.5 E F1
(if you lik)2.5 E(e, or just code it directly)-.1 E(.)-.65 E F5([2)5 E
F6(4)A F5(])A F7(>)92 645.496 Q F3(\(reverse '\(1 2 3 4 5\)\))4.5 E F7
(\(5 4 3 2 1\))92 657.496 Q(>)92 669.496 Q F3(\(reverse '\(\)\))4.5 E F7
(\(\))92 681.496 Q(>)92 693.496 Q F3
(\(reverse '\(\(1 2\) \(3 4\) \(5 6\)\)\))4.5 E F7
(\(\(5 6\) \(3 4\) \(1 2\)\))92 705.496 Q 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CSE-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2020 \203 Final Exam)-.18 E/F1 10/Times-Roman@0 SF 2.5(3o)170.36
G 2.5(f4)-2.5 G(7.)79.5 70 Q/F2 10/Times-BoldItalic@0 SF(Smalltalk.)5 E
F1 .821(Write code in Smalltalk which will print the numbers 1 through \
10000 inclusi)5.821 F -.15(ve)-.25 G 3.322(,o).15 G .822(ne number per)
-3.322 F(line.)92 82 Q/F3 10/Helvetica-Bold@0 SF([1)5 E/F4 10
/ZapfDingbats SF(4)A F3(])A F1(8.)79.5 151.6 Q F2(Smalltalk.)5 E F1 .76
(Extend class)5.76 F/F5 10/Courier-Narrow-Bold@0 SF(Array)3.26 E F1 .76
(with a unary message)3.26 F F5(reverse)3.259 E F1 3.259(,w)C .759
(hich re)-3.259 F -.15(ve)-.25 G .759(rses an array).15 F 5.759(.T)-.65
G .759(he array itself is re-)-5.759 F -.15(ve)92 163.6 S 2.5
(rsed. Nothing).15 F(is returned.)2.5 E F3([3)5 E F4(4)A F3(])A F5(st>)
92 175.6 Q/F6 10/Courier-Narrow@0 SF 4.5(a:)4.5 G 4.5(=#)-4.5 G
(\(1 2 3 4 5\) copy.)-4.5 E F5(\(1 2 3 4 5 \))92 187.6 Q(st>)92 199.6 Q
F6 4.5(ar)4.5 G(everse.)-4.5 E F5(\(5 4 3 2 1 \))92 211.6 Q(st>)92 223.6
Q F6 4.5(a:)4.5 G 4.5(=#)-4.5 G 4.5(\(#)-4.5 G
(\(1 2\) #\(3 4\) #\(5 6\)\) copy.)-4.5 E F5
(\(\(1 2 \) \(3 4 \) \(5 6 \) \))92 235.6 Q(st>)92 247.6 Q F6 4.5(ar)4.5
G(everse.)-4.5 E F5(\(\(5 6 \) \(3 4 \) \(1 2 \) \))92 259.6 Q F1(9.)
79.5 343.6 Q F2(Sc)5 E(heme.)-.1 E F1 .496(De\214ne the function)5.496 F
F5(evalexpr)2.996 E F1 .496(which tak)2.996 F .496(es as an ar)-.1 F
.497(gument either a number or an e)-.18 F 2.997(xpression. A)-.15 F
(num-)2.997 E .002(ber is al)92 355.6 R -.1(wa)-.1 G .002
(ys returned as real.).1 F .002(An e)5.002 F .002
(xpression is a list of length 3, where the)-.15 F F5(car)2.502 E F1
.001(is a binary function, and the)2.502 F F5(cdr)2.501 E F1 .806
(is a list of tw)92 367.6 R 3.306(oe)-.1 G 3.306(xpressions. See)-3.456
F .806(the Scheme interaction at the left.)3.306 F .806
(Note that there is no hash table for func-)5.806 F 2.5(tions. The)92
379.6 R(actual function')2.5 E 2.5(sv)-.55 G
(alue is in the list in the function position.)-2.75 E
(Note the quasiquote and unquote.)5 E F3([2)5 E F4(4)A F3(])A F6(>)92
391.6 Q F5(\(evalexpr `\(,+ \(,* 2 3\) \(,* 4 5\)\)\))4.5 E F6(26.0)92
403.6 Q(>)92 415.6 Q F5(\(evalexpr 3\))4.5 E F6(3.0)92 427.6 Q(>)92
439.6 Q F5(\(evalexpr `\(,* \(,+ 8 3\) \(,+ \(,* 2 9\) 6\)\)\))4.5 E F6
(264.0)92 451.6 Q F1(10.)74.5 506.8 Q F2(Smalltalk.)5 E F1 1.076
(Extend class)6.076 F F5(Array)3.576 E F1 1.076(with a unary method)
3.576 F F5(sum)3.576 E F1 3.576(,w)C 1.075
(hich returns the sum of all elements of the array)-3.576 F(.)-.65 E
(Assume the array contains numbers.)92 518.8 Q F3([2)5 E F4(4)A F3(])A
F6(st>)92 530.8 Q F5(#\(1 2 3 4 5\) sum.)4.5 E F6(15)92 542.8 Q(st>)92
554.8 Q F5(#\(\) sum.)4.5 E F6(0)92 566.8 Q F1(11.)74.5 614.8 Q F2(Sc)5
E(heme.)-.1 E F1(De\214ne the function)5 E F5(map)2.5 E F1(.)A F3([2)5 E
F4(4)A F3(])A F6 4.5(>\()92 626.8 S
(map \(lambda \(x\) \(+ 5 x\)\) '\(1 2 3 4\)\))-4.5 E(\(6 7 8 9\))92
638.8 Q 4.5(>\()92 650.8 S
(map \(lambda \(x\) \(cons 5 x\)\) '\(1 2 3 4\)\))-4.5 E
(\(\(5 . 1\) \(5 . 2\) \(5 . 3\) \(5 . 4\)\))92 662.8 Q 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
.4 LW 540 52 72 52 DL 540 54 72 54 DL/F0 10/Times-Bold@0 SF
(CSE-112 \203 Pr)72 48 Q(ogramming Languages \203 W)-.18 E
(inter 2020 \203 Final Exam)-.18 E/F1 10/Times-Roman@0 SF 2.5(4o)170.36
G 2.5(f4)-2.5 G(12.)74.5 70 Q/F2 10/Times-BoldItalic@0 SF(Ocaml.)5 E F1
.272(Code the Fibonacci function.)5.272 F .272
(Be sure to use tail recursion, and mak)5.272 F 2.772(ei)-.1 G 2.772(tr)
-2.772 G .272(un in)-2.772 F/F3 10/Times-Italic@0 SF(O)2.672 E F1(\().27
E F3(n).36 E F1 2.772(\)t).24 G 2.772(ime. Do)-2.772 F .272(not con-)
2.772 F(sider the case where)92 82 Q F3(n)2.86 E F1 2.8(<0)3.04 G 5(.A)
-2.8 G(ssume)-5 E F3(n)2.86 E/F4 10/Symbol SF<b3>3.04 E F1 2.5(0. F)2.8
F(or reference, the mathematical e)-.15 E(xpression is gi)-.15 E -.15
(ve)-.25 G 2.5(nh).15 G(ere.)-2.5 E/F5 10/Helvetica-Bold@0 SF([2)5 E/F6
10/ZapfDingbats SF(4)A F5(])A F3(F)92.42 94 Q/F7 7/Times-Roman@0 SF(0)
.43 2 M F4(=)3.3 -2 M F1(0,)2.8 E F3(F)11.62 E F7(1).43 2 M F4(=)3.3 -2
M F1(1,)2.8 E F3(F)11.62 E/F8 7/Times-Italic@0 SF(n).682 2 M F4(=)3.468
-2 M F3(F)3.22 E F8(n).682 2 M/F9 7/Symbol SF(-).168 E F7(1)A F4(+)2.7
-2 M F3(F)2.62 E F8(n).682 2 M F9(-).168 E F7(2)A/F10 10
/Courier-Narrow@0 SF(#)92 106 Q/F11 10/Courier-Narrow-Bold@0 SF
(#use "fib.ml";;)4.5 E F10(val fib : int -> int = <fun>)92 118 Q(#)92
130 Q F11(List.map fib [0;1;2;3;4;5;6;7];;)4.5 E F10 4.5(-:i)92 142 S
(nt list = [0; 1; 1; 2; 3; 5; 8; 13])-4.5 E F1(13.)74.5 208 Q F2
(Prolog.)5 E F1 .981(Write a function)5.981 F F11(zip)3.481 E F1 3.481
(,w)C .981(hich will zip tw)-3.481 F 3.481(ol)-.1 G .98
(ists into a single list of pairs.)-3.481 F .98
(If the lists are not of equal)5.98 F(length, ignore e)92 220 Q
(xcess elements of the longer list.)-.15 E F5([2)5 E F6(4)A F5(])A F10
(?-)92 232 Q F11(zip\( [1,2,3,4,5], [4,5,6], X\).)4.5 E F10 4.5(X=[)92
244 S(pair\(1, 4\), pair\(2, 5\), pair\(3, 6\)] .)-4.5 E(?-)92 256 Q F11
(zip\( [1,2,3], [4,5,6], X\).)4.5 E F10 4.5(X=[)92 268 S
(pair\(1, 4\), pair\(2, 5\), pair\(3, 6\)] .)-4.5 E(?-)92 280 Q F11
(zip\( [], [1,2,3], X\).)4.5 E F10 4.5(X=[)92 292 S(].)-4.5 E F1(14.)
74.5 358 Q F2(Ocaml.)5 E F1 .067(De\214ne the function)5.067 F F11
(merge)2.567 E F1 .067(which mer)2.567 F .067(ges tw)-.18 F 2.567(os)-.1
G .067(orted lists according to a predicate and produces a result-)
-2.567 F(ing list.)92 370 Q(Assume the ar)5 E(gument list are sorted.)
-.18 E F5([3)5 E F6(4)A F5(])A F10(#)92 382 Q F11(merge;;)4.5 E F10
(val merge : \('a -> 'a -> bool\) -> 'a list -> 'a list -> 'a list)92
394 Q(#)92 406 Q F11(merge \(<\) [1;3;5;7;9] [2;4;6;8];;)4.5 E F10 4.5
(-:i)92 418 S(nt list = [1; 2; 3; 4; 5; 6; 7; 8; 9])-4.5 E(#)92 430 Q
F11(merge \(>\) [9;5;3;1] [77;2;-5];;)4.5 E F10 4.5(-:i)92 442 S
(nt list = [77; 9; 5; 3; 2; 1; -5])-4.5 E(#)92 454 Q F11
(merge \(<\) [] [1;2;3];;)4.5 E F10 4.5(-:i)92 466 S
(nt list = [1; 2; 3])-4.5 E F1(15.)74.5 593.2 Q F2 -.5(Pe)5 G(rl.).5 E
F1 .259(Write a program which prints out the \214le size, modi\214catio\
n time, and \214lename for each \214le mentioned in)5.259 F F11(@ARGV)92
605.2 Q F1 5.93(.H)C -.834(ints :)-5.93 F .93(The result of the)5.93 F
F11(stat)3.43 E F1 .93(function is an array where)3.43 F F11($stat[7])
3.43 E F1 .93(is the \214le size and)3.43 F F11($stat[9])3.431 E F1 .931
(is the)3.431 F(modi\214cation time.)92 617.2 Q 1.6 -.8(To f)5 H
(ormat the time as required, use the follo).8 E(wing statement.)-.25 E
F5([3)5 E F6(4)A F5(])A F11
($time = strftime "%b %e %H:%S", localtime $stat[9];)105.5 629.2 Q F10
(-bash-60$)92 641.2 Q F11(ls.perl *.perl)4.5 E F10
(84 Nov 12 13:37 count.perl)119 653.2 Q(240 Nov 16 12:39 euclid.perl)
114.5 665.2 Q(253 Nov 25 19:03 ls.perl)114.5 677.2 Q(110 Dec)114.5 689.2
Q 4.5(51)9 G(7:53 range.perl)-4.5 E(91 Mar 14 21:31 wc.perl)119 701.2 Q
0 Cg EP
%%Trailer
end
%%EOF
